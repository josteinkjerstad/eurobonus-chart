---
export const prerender = false;
import Layout from "../layouts/Layout.astro";
import { createServerClient, parseCookieHeader } from "@supabase/ssr";
import { getLocalUserId } from "../utils/localUser";
import type { Profile } from "../models/profile";
import { ProfileSection } from "../components/profile/ProfileSection";
import { Card, Elevation } from "@blueprintjs/core";

const { cookies, request } = Astro;
const supabase = createServerClient(
  import.meta.env.SUPABASE_URL,
  import.meta.env.SUPABASE_KEY,
  {
    cookies: {
      getAll() {
        return parseCookieHeader(request.headers.get("Cookie") ?? "");
      },
      setAll(cookiesToSet) {
        cookiesToSet.forEach(({ name, value, options }) =>
          cookies.set(name, value, options)
        );
      },
    },
  }
);

const userId =
  import.meta.env.MODE === "development"
    ? getLocalUserId()
    : (await supabase.auth.getUser()).data.user?.id;

if (!userId) {
  return redirect("/signin");
}

let profile = (
  await supabase.from("profiles").select().eq("user_id", userId).single()
)?.data as Profile | undefined;

if (!profile) {
  const { data: newProfile } = await supabase
    .from("profiles")
    .insert({ user_id: userId })
    .select()
    .single();
  profile = newProfile as Profile;
}

const familyMembers = (
  await supabase.from("profiles").select().eq("parent_id", userId)
).data as Profile[];
---

<Layout title="Profile">
  <ProfileSection profile={profile} familyMembers={familyMembers} client:load />
</Layout>
